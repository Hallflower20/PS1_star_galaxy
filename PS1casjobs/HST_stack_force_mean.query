/* Select only those sources with unique matches to HST data */

select c.*
into mydb.COSMOS_PS1_Xmatch_unique
from (select objid
from COSMOS_PS1_Xmatch
group by objid
having count(objid) = 1) s join COSMOS_PS1_Xmatch c on s.objid = c.objid
order by objid

/* Grab the number of detections from objectThin */
select class_star, mu_class, cx.objid, primaryDetection, nDetections, qualityFlag
into mydb.COSMOS_tmp1
from mydb.COSMOS_PS1_Xmatch_unique cx join objectthin o on cx.objid = o.objid

/* Get the stack whiteFlux Features */

select *, 
wwPSFFlux/wwKronFlux as wwPSFKronRatio
into mydb.COSMOS_tmp2
from (select t.*, 
    (case when (gPSFFlux > 0 AND gKronFlux > 0)
        then power(gPSFFlux,3)/power(gPSFFluxErr,2) else 0 end + 
    case when (rPSFFlux > 0 AND rKronFlux > 0)
        then power(rPSFFlux,3)/power(rPSFFluxErr,2) else 0 end + 
    case when (iPSFFlux > 0 AND iKronFlux > 0)
        then power(iPSFFlux,3)/power(iPSFFluxErr,2) else 0 end + 
    case when (zPSFFlux > 0 AND zKronFlux > 0)
        then power(zPSFFlux,3)/power(zPSFFluxErr,2) else 0 end + 
    case when (yPSFFlux > 0 AND yKronFlux > 0)
        then power(yPSFFlux,3)/power(yPSFFluxErr,2) else 0 end)/nullif(
    case when (gPSFFlux > 0 AND gKronFlux > 0)
        then power(gPSFFlux,2)/power(gPSFFluxErr,2) else 0 end + 
    case when (rPSFFlux > 0 AND rKronFlux > 0)
        then power(rPSFFlux,2)/power(rPSFFluxErr,2) else 0 end + 
    case when (iPSFFlux > 0 AND iKronFlux > 0)
        then power(iPSFFlux,2)/power(iPSFFluxErr,2) else 0 end + 
    case when (zPSFFlux > 0 AND zKronFlux > 0)
        then power(zPSFFlux,2)/power(zPSFFluxErr,2) else 0 end + 
    case when (yPSFFlux > 0 AND yKronFlux > 0)
        then power(yPSFFlux,2)/power(yPSFFluxErr,2) else 0 end, 0) 
    as wwPSFFlux, 
    (case when (gPSFFlux > 0 AND gKronFlux > 0)
        then power(gKronFlux,3)/power(gKronFluxErr,2) else 0 end + 
    case when (rPSFFlux > 0 AND rKronFlux > 0)
        then power(rKronFlux,3)/power(rKronFluxErr,2) else 0 end + 
    case when (iPSFFlux > 0 AND iKronFlux > 0)
        then power(iKronFlux,3)/power(iKronFluxErr,2) else 0 end + 
    case when (zPSFFlux > 0 AND zKronFlux > 0)
        then power(zKronFlux,3)/power(zKronFluxErr,2) else 0 end + 
    case when (yPSFFlux > 0 AND yKronFlux > 0)
        then power(yKronFlux,3)/power(yKronFluxErr,2) else 0 end)/nullif(
    case when (gPSFFlux > 0 AND gKronFlux > 0)
        then power(gKronFlux,2)/power(gKronFluxErr,2) else 0 end + 
    case when (rPSFFlux > 0 AND rKronFlux > 0)
        then power(rKronFlux,2)/power(rKronFluxErr,2) else 0 end + 
    case when (iPSFFlux > 0 AND iKronFlux > 0)
        then power(iKronFlux,2)/power(iKronFluxErr,2) else 0 end + 
    case when (zPSFFlux > 0 AND zKronFlux > 0)
        then power(zKronFlux,2)/power(zKronFluxErr,2) else 0 end + 
    case when (yPSFFlux > 0 AND yKronFlux > 0)
        then power(yKronFlux,2)/power(yKronFluxErr,2) else 0 end, 0) 
    as wwKronFlux    
    from mydb.COSMOS_tmp1 t left join stackobjectattributes soa on t.objid = soa.objid
    where soa.primaryDetection = 1
) dummy


/* Query for the the Forced Flux values */

select *, 
wwFPSFFlux/wwFKronFlux as wwFPSFKronRatio
into mydb.COSMOS_tmp3
from (select t.*, 
    (case when (gFPSFFlux > 0 AND gFKronFlux > 0 AND gFPSFFluxErr > 0 AND gFKronFluxErr > 0)
        then power(gFPSFFlux,3)/power(gFPSFFluxErr,2) else 0 end + 
    case when (rFPSFFlux > 0 AND rFKronFlux > 0 AND rFPSFFluxErr > 0 AND rFKronFluxErr > 0)
        then power(rFPSFFlux,3)/power(rFPSFFluxErr,2) else 0 end + 
    case when (iFPSFFlux > 0 AND iFKronFlux > 0 AND iFPSFFluxErr > 0 AND iFKronFluxErr > 0)
        then power(iFPSFFlux,3)/power(iFPSFFluxErr,2) else 0 end + 
    case when (zFPSFFlux > 0 AND zFKronFlux > 0 AND zFPSFFluxErr > 0 AND zFKronFluxErr > 0)
        then power(zFPSFFlux,3)/power(zFPSFFluxErr,2) else 0 end + 
    case when (yFPSFFlux > 0 AND yFKronFlux > 0 AND yFPSFFluxErr > 0 AND yFKronFluxErr > 0)
        then power(yFPSFFlux,3)/power(yFPSFFluxErr,2) else 0 end)/nullif(
    case when (gFPSFFlux > 0 AND gFKronFlux > 0 AND gFPSFFluxErr > 0 AND gFKronFluxErr > 0)
        then power(gFPSFFlux,2)/power(gFPSFFluxErr,2) else 0 end + 
    case when (rFPSFFlux > 0 AND rFKronFlux > 0 AND rFPSFFluxErr > 0 AND rFKronFluxErr > 0)
        then power(rFPSFFlux,2)/power(rFPSFFluxErr,2) else 0 end + 
    case when (iFPSFFlux > 0 AND iFKronFlux > 0 AND iFPSFFluxErr > 0 AND iFKronFluxErr > 0)
        then power(iFPSFFlux,2)/power(iFPSFFluxErr,2) else 0 end + 
    case when (zFPSFFlux > 0 AND zFKronFlux > 0 AND zFPSFFluxErr > 0 AND zFKronFluxErr > 0)
        then power(zFPSFFlux,2)/power(zFPSFFluxErr,2) else 0 end + 
    case when (yFPSFFlux > 0 AND yFKronFlux > 0 AND yFPSFFluxErr > 0 AND yFKronFluxErr > 0)
        then power(yFPSFFlux,2)/power(yFPSFFluxErr,2) else 0 end, 0) 
    as wwFPSFFlux, 
    (case when (gFPSFFlux > 0 AND gFKronFlux > 0 AND gFPSFFluxErr > 0 AND gFKronFluxErr > 0)
        then power(gFKronFlux,3)/power(gFKronFluxErr,2) else 0 end + 
    case when (rFPSFFlux > 0 AND rFKronFlux > 0 AND rFPSFFluxErr > 0 AND rFKronFluxErr > 0)
        then power(rFKronFlux,3)/power(rFKronFluxErr,2) else 0 end + 
    case when (iFPSFFlux > 0 AND iFKronFlux > 0 AND iFPSFFluxErr > 0 AND iFKronFluxErr > 0)
        then power(iFKronFlux,3)/power(iFKronFluxErr,2) else 0 end + 
    case when (zFPSFFlux > 0 AND zFKronFlux > 0 AND zFPSFFluxErr > 0 AND zFKronFluxErr > 0)
        then power(zFKronFlux,3)/power(zFKronFluxErr,2) else 0 end + 
    case when (yFPSFFlux > 0 AND yFKronFlux > 0 AND yFPSFFluxErr > 0 AND yFKronFluxErr > 0)
        then power(yFKronFlux,3)/power(yFKronFluxErr,2) else 0 end)/nullif(
    case when (gFPSFFlux > 0 AND gFKronFlux > 0 AND gFPSFFluxErr > 0 AND gFKronFluxErr > 0)
        then power(gFKronFlux,2)/power(gFKronFluxErr,2) else 0 end + 
    case when (rFPSFFlux > 0 AND rFKronFlux > 0 AND rFPSFFluxErr > 0 AND rFKronFluxErr > 0)
        then power(rFKronFlux,2)/power(rFKronFluxErr,2) else 0 end + 
    case when (iFPSFFlux > 0 AND iFKronFlux > 0 AND iFPSFFluxErr > 0 AND iFKronFluxErr > 0)
        then power(iFKronFlux,2)/power(iFKronFluxErr,2) else 0 end + 
    case when (zFPSFFlux > 0 AND zFKronFlux > 0 AND zFPSFFluxErr > 0 AND zFKronFluxErr > 0)
        then power(zFKronFlux,2)/power(zFKronFluxErr,2) else 0 end + 
    case when (yFPSFFlux > 0 AND yFKronFlux > 0 AND yFPSFFluxErr > 0 AND yFKronFluxErr > 0)
        then power(yFKronFlux,2)/power(yFKronFluxErr,2) else 0 end, 0) 
    as wwFKronFlux    
    from mydb.COSMOS_tmp2 t left join panstarrs_dr1.forcedmeanobject fmo on t.objid = fmo.objid
) dummy

/* Query for the the Mean Flux values */

select *, 
wwMeanPSFFlux/nullif(wwMeanKronFlux,0) as wwMeanPSFKronRatio
into mydb.COSMOS_compare_white_phot
from (select t.*, 
    (case when (gMeanPSFMag > 0 AND gMeanKronMag > 0 AND gMeanPSFMagErr > 0 AND gMeanKronMagErr > 0)
        then 3631*power(cast(10 as float),-0.4*gMeanPSFMag)*power(2.5/log(10)/gMeanPSFMagErr,2) else 0 end + 
    case when (rMeanPSFMag > 0 AND rMeanKronMag > 0 AND rMeanPSFMagErr > 0 AND rMeanKronMagErr > 0)
        then 3631*power(cast(10 as float),-0.4*rMeanPSFMag)*power(2.5/log(10)/rMeanPSFMagErr,2) else 0 end + 
    case when (iMeanPSFMag > 0 AND iMeanKronMag > 0 AND iMeanPSFMagErr > 0 AND iMeanKronMagErr > 0)
        then 3631*power(cast(10 as float),-0.4*iMeanPSFMag)*power(2.5/log(10)/iMeanPSFMagErr,2) else 0 end + 
    case when (zMeanPSFMag > 0 AND zMeanKronMag > 0 AND zMeanPSFMagErr > 0 AND zMeanKronMagErr > 0)
        then 3631*power(cast(10 as float),-0.4*zMeanPSFMag)*power(2.5/log(10)/zMeanPSFMagErr,2) else 0 end + 
    case when (yMeanPSFMag > 0 AND yMeanKronMag > 0 AND yMeanPSFMagErr > 0 AND yMeanKronMagErr > 0)
        then 3631*power(cast(10 as float),-0.4*yMeanPSFMag)*power(2.5/log(10)/yMeanPSFMagErr,2) else 0 end)/nullif(
    case when (gMeanPSFMag > 0 AND gMeanKronMag > 0 AND gMeanPSFMagErr > 0 AND gMeanKronMagErr > 0)
        then power(2.5/log(10)/gMeanPSFMagErr,2) else 0 end + 
    case when (rMeanPSFMag > 0 AND rMeanKronMag > 0 AND rMeanPSFMagErr > 0 AND rMeanKronMagErr > 0)
        then power(2.5/log(10)/rMeanPSFMagErr,2) else 0 end + 
    case when (iMeanPSFMag > 0 AND iMeanKronMag > 0 AND iMeanPSFMagErr > 0 AND iMeanKronMagErr > 0)
        then power(2.5/log(10)/iMeanPSFMagErr,2) else 0 end + 
    case when (zMeanPSFMag > 0 AND zMeanKronMag > 0 AND zMeanPSFMagErr > 0 AND zMeanKronMagErr > 0)
        then power(2.5/log(10)/zMeanPSFMagErr,2) else 0 end + 
    case when (yMeanPSFMag > 0 AND yMeanKronMag > 0 AND yMeanPSFMagErr > 0 AND yMeanKronMagErr > 0)
        then power(2.5/log(10)/yMeanPSFMagErr,2) else 0 end, 0) 
    as wwMeanPSFFlux, 
    (case when (gMeanPSFMag > 0 AND gMeanKronMag > 0 AND gMeanPSFMagErr > 0 AND gMeanKronMagErr > 0)
        then 3631*power(cast(10 as float),-0.4*gMeanKronMag)*power(2.5/log(10)/gMeanKronMagErr,2) else 0 end + 
    case when (rMeanPSFMag > 0 AND rMeanKronMag > 0 AND rMeanPSFMagErr > 0 AND rMeanKronMagErr > 0)
        then 3631*power(cast(10 as float),-0.4*rMeanKronMag)*power(2.5/log(10)/rMeanKronMagErr,2) else 0 end + 
    case when (iMeanPSFMag > 0 AND iMeanKronMag > 0 AND iMeanPSFMagErr > 0 AND iMeanKronMagErr > 0)
        then 3631*power(cast(10 as float),-0.4*iMeanKronMag)*power(2.5/log(10)/iMeanKronMagErr,2) else 0 end + 
    case when (zMeanPSFMag > 0 AND zMeanKronMag > 0 AND zMeanPSFMagErr > 0 AND zMeanKronMagErr > 0)
        then 3631*power(cast(10 as float),-0.4*zMeanKronMag)*power(2.5/log(10)/zMeanKronMagErr,2) else 0 end + 
    case when (yMeanPSFMag > 0 AND yMeanKronMag > 0 AND yMeanPSFMagErr > 0 AND yMeanKronMagErr > 0)
        then 3631*power(cast(10 as float),-0.4*yMeanKronMag)*power(2.5/log(10)/yMeanKronMagErr,2) else 0 end)/nullif(
    case when (gMeanPSFMag > 0 AND gMeanKronMag > 0 AND gMeanPSFMagErr > 0 AND gMeanKronMagErr > 0)
        then power(2.5/log(10)/gMeanKronMagErr,2) else 0 end + 
    case when (rMeanPSFMag > 0 AND rMeanKronMag > 0 AND rMeanPSFMagErr > 0 AND rMeanKronMagErr > 0)
        then power(2.5/log(10)/rMeanKronMagErr,2) else 0 end + 
    case when (iMeanPSFMag > 0 AND iMeanKronMag > 0 AND iMeanPSFMagErr > 0 AND iMeanKronMagErr > 0)
        then power(2.5/log(10)/iMeanKronMagErr,2) else 0 end + 
    case when (zMeanPSFMag > 0 AND zMeanKronMag > 0 AND zMeanPSFMagErr > 0 AND zMeanKronMagErr > 0)
        then power(2.5/log(10)/zMeanKronMagErr,2) else 0 end + 
    case when (yMeanPSFMag > 0 AND yMeanKronMag > 0 AND yMeanPSFMagErr > 0 AND yMeanKronMagErr > 0)
        then power(2.5/log(10)/yMeanKronMagErr,2) else 0 end, 0) 
    as wwMeanKronFlux   
    from mydb.COSMOS_tmp3 t left join meanobject mo on t.objid = mo.objid
) dummy
